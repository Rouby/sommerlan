name: üöÄ Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest

    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable

      - name: üî¨ Lint
        run: yarn lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest

    concurrency:
      group: typecheck-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable

      - name: üîé Type check
        run: yarn typecheck

  vitest:
    name: ‚ö° Vitest
    runs-on: ubuntu-latest

    concurrency:
      group: test-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable

      - name: ‚ö° Run vitest
        run: yarn test -- --coverage

  build:
    name: üê≥ Build
    runs-on: self-hosted
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    concurrency:
      group: build-${{ github.ref }}

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
      env_url: ${{ steps.branch_check.outputs.env_url }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üê≥ Docker build
        uses: docker/build-push-action@v4
        with:
          context: .
          outputs: type=docker,dest=/tmp/sommerlan-image.tar
          platforms: linux/arm64
          tags: sommerlan-app:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            NEW_RELIC_LICENSE_KEY=${{ secrets.NEW_RELIC_LICENSE_KEY }}
            NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }}
            NEW_RELIC_TRUST_KEY=${{ secrets.NEW_RELIC_TRUST_KEY }}
            NEW_RELIC_AGENT_ID=${{ secrets.NEW_RELIC_AGENT_ID }}
            NEW_RELIC_LICENSE_KEY=${{ secrets.NEW_RELIC_LICENSE_KEY }}
            NEW_RELIC_APPLICATION_ID=${{ secrets.NEW_RELIC_APPLICATION_ID }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ‚úèÔ∏è Write output
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::production"
            echo "::set-output name=env_url::https://sommerlan.rocks"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "::set-output name=env_name::staging"
            echo "::set-output name=env_url::https://staging.sommerlan.rocks"
          fi

  deploy:
    name: üöÄ Deploy
    runs-on: self-hosted
    needs: [lint, typecheck, vitest, build]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    concurrency:
      group: deploy-${{ github.ref }}

    environment:
      name: ${{ needs.build.outputs.env_name }}
      url: ${{ needs.build.outputs.env_url }}

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üê≥ Load image
        run: |
          docker load --input /tmp/sommerlan-image.tar

      - name: üöÄ Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          docker compose -p sommerlan-staging up -d
        env:
          WORKDIR: "/home/pi/sommerlan"
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
          APP_PORT: "53346"
          APP_ORIGIN: "https://staging.sommerlan.rocks"
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
          NEW_RELIC_APP_NAME: "sommerlan-staging"

      - name: üöÄ Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker compose -p sommerlan-production up -d
        env:
          WORKDIR: "/home/pi/sommerlan"
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
          APP_PORT: "53345"
          APP_ORIGIN: "https://sommerlan.rocks"
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
          NEW_RELIC_APP_NAME: "sommerlan-production"

  # newrelic:
  #   name: üéØ newrelic
  #   runs-on: ubuntu-latest
  #   needs: [deploy]
  #   # only build/deploy main branch on pushes
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

  #   concurrency:
  #     group: newrelic-${{ github.ref }}

  #   steps:
  #     - name: üè∑Ô∏è New Relic Application Deployment Marker (client)
  #       uses: newrelic/deployment-marker-action@v2.2.0
  #       with:
  #         apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
  #         region: "EU"
  #         guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_CLIENT }}
  #         version: "${{ github.sha }}"
  #         commit: "${{ github.sha }}"
  #         user: "${{ github.actor }}"
  #     - name: üè∑Ô∏è New Relic Application Deployment Marker (server)
  #       uses: newrelic/deployment-marker-action@v2.2.0
  #       with:
  #         apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
  #         region: "EU"
  #         guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_SERVER }}
  #         version: "${{ github.sha }}"
  #         commit: "${{ github.sha }}"
  #         user: "${{ github.actor }}"
