name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable

      - name: 🔬 Lint
        run: yarn lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable

      - name: 🔎 Type check
        run: yarn typecheck

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable

      - name: ⚡ Run vitest
        run: yarn test -- --coverage

  build:
    name: 🐳 Build
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
      env_url: ${{ steps.branch_check.outputs.env_url }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: 🐳 Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          outputs: type=docker,dest=/tmp/sommerlan-image.tar
          platforms: linux/arm64
          tags: sommerlan-app:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: ⬆️ Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: App-Image
          path: /tmp/sommerlan-image.tar

      - name: ✏️ Write output
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::production"
            echo "::set-output name=env_url::https://sommerlan.rocks"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "::set-output name=env_name::staging"
            echo "::set-output name=env_url::https://staging.sommerlan.rocks"
          fi

  deploy:
    name: 🚀 Deploy
    runs-on: self-hosted
    needs: [lint, typecheck, vitest, build]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    environment:
      name: ${{ needs.build.outputs.env_name }}
      url: ${{ needs.build.outputs.env_url }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download artifact
        uses: actions/download-artifact@v2
        with:
          name: App-Image
          path: /tmp

      - name: 🐳 Load image
        run: |
          docker load --input /tmp/sommerlan-image.tar

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          docker compose -p sommerlan-staging up -d
        env:
          WORKDIR: "/home/pi/sommerlan"
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
          APP_PORT: "53346"
          APP_ORIGIN: "https://staging.sommerlan.rocks/"
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker compose -p sommerlan-production up -d
        env:
          WORKDIR: "/home/pi/sommerlan"
          BRANCH: ${{ github.ref_name }}
          SHA: ${{ github.sha }}
          APP_PORT: "53345"
          APP_ORIGIN: "https://sommerlan.rocks/"
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

  newrelic:
    name: 🚀 newrelic
    runs-on: ubuntu-latest
    needs: [deploy]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: 🏷️ New Relic Application Deployment Marker (client)
        uses: newrelic/deployment-marker-action@v2.2.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          region: "EU"
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_CLIENT }}
          version: "${{ github.sha }}"
          commit: "${{ github.sha }}"
          user: "${{ github.actor }}"
      - name: 🏷️ New Relic Application Deployment Marker (server)
        uses: newrelic/deployment-marker-action@v2.2.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          region: "EU"
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_SERVER }}
          version: "${{ github.sha }}"
          commit: "${{ github.sha }}"
          user: "${{ github.actor }}"
