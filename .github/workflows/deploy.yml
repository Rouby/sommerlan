name: üöÄ Deploy

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  lint:
    name: ‚¨£ Lint
    runs-on: ubuntu-latest

    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable --immutable-cache

      - name: üî¨ Lint
        run: yarn lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest

    concurrency:
      group: typecheck-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable --immutable-cache

      - name: üîé Type check
        run: yarn typecheck

  test:
    name: üß™ Unit tests
    runs-on: ubuntu-latest

    concurrency:
      group: test-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: üì• Install deps
        run: yarn install --immutable --immutable-cache

      - name: üß™ Run vitest
        run: yarn test -- --coverage

  integration:
    name: üîó Integration tests
    runs-on: ubuntu-latest

    concurrency:
      group: integration-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: üì• Install deps
        run: |
          yarn install --immutable --immutable-cache
          yarn workspace @sommerlan-app/integration playwright install --with-deps

      - name: üî® Build
        run: yarn build

      - name: üîó Run tests
        run: yarn integrate
        env:
          SESSION_SECRET: kitty
          NEW_RELIC_ENABLED: "false"
          NEW_RELIC_LOGGING_ENABLED: "false"
          LOG_LEVEL: trace

      - name: üì¶ Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/integration/playwright-report/
          retention-days: 30

  build:
    name: üèóÔ∏è Build
    runs-on: ubuntu-latest

    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üê≥ Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/rouby/sommerlan-app:latest
            ghcr.io/rouby/sommerlan-app:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: üöÄ Deploy
    runs-on: arc-runner-set
    needs: [lint, typecheck, test, integration, build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        env_name: [staging, production]

    concurrency:
      group: deploy-${{ matrix.env_name }}
      # allow cancel if not reviewed
      cancel-in-progress: ${{ matrix.env_name == 'production' }}

    environment:
      name: ${{ matrix.env_name }}
      url: "https://${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks"

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üì• Install kubectl and helm
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin
          kubectl version --client
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: üöÄ Deploy
        run: |
          export SESSION_SECRET = (echo "sommerlan-rocks-cookies" | base64 -w 0)
          export APP_ORIGIN = (echo "https://${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks" | base64 -w 0)
          export GOOGLE_SHEET_ID = (echo '${{ vars.GOOGLE_SHEET_ID }}' | base64 -w 0)
          export GOOGLE_SERVICE_ACCOUNT_EMAIL = (echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}' | base64 -w 0)
          export GOOGLE_PRIVATE_KEY = (echo '${{ secrets.GOOGLE_PRIVATE_KEY }}' | base64 -w 0)
          export NEW_RELIC_LICENSE_KEY = (echo '${{ secrets.NEW_RELIC_LICENSE_KEY }}' | base64 -w 0)
          export NEW_RELIC_APP_NAME = (echo "sommerlan-${{ matrix.env_name }}" | base64 -w 0)
          export NEW_RELIC_LOADER_CONFIG = (echo '${{ secrets.NEW_RELIC_LOADER_CONFIG }}' | base64 -w 0)
          export NEW_RELIC_INFO = (echo '${{ secrets.NEW_RELIC_INFO }}' | base64 -w 0)
          export DISCORD_BOT_TOKEN = (echo '${{ secrets.DISCORD_BOT_TOKEN }}' | base64 -w 0)
          export DISCORD_GUILD_ID = (echo '${{ secrets.DISCORD_GUILD_ID }}' | base64 -w 0)
          export DISCORD_ROLE_ID = (echo '${{ secrets.DISCORD_ROLE_ID }}' | base64 -w 0)
          export DISCORD_ADMIN_IDS = (echo '${{ vars.DISCORD_ADMIN_IDS }}' | base64 -w 0)

          helm upgrade sommerlan -n "sommerlan-${{ matrix.env_name }}" --install --create-namespace `
              --set image.repository=ghcr.io/rouby/sommerlan-app `
              --set image.tag="${{ github.ref_name }}-${{ github.sha }}" `
              --set ingress.hosts[0].host="${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks" `
              --set ingress.hosts[0].paths[0].path="/" `
              --set ingress.hosts[0].paths[0].pathType="ImplementationSpecific" `
              --set ingress.clusterIssuer="letsencrypt-production" `
              --set ingress.tls[0].hosts="{${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks}" `
              --set ingress.tls[0].secretName="sommerlan-tls" `
              --set-string secrets.SESSION_SECRET="SESSION_SECRET" `
              --set-string secrets.APP_ORIGIN="APP_ORIGIN" `
              --set-string secrets.GOOGLE_SHEET_ID="GOOGLE_SHEET_ID" `
              --set-string secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL="GOOGLE_SERVICE_ACCOUNT_EMAIL" `
              --set-string secrets.GOOGLE_PRIVATE_KEY="GOOGLE_PRIVATE_KEY" `
              --set-string secrets.NEW_RELIC_LICENSE_KEY="NEW_RELIC_LICENSE_KEY" `
              --set-string secrets.NEW_RELIC_APP_NAME="NEW_RELIC_APP_NAME" `
              --set-string secrets.NEW_RELIC_LOADER_CONFIG="NEW_RELIC_LOADER_CONFIG" `
              --set-string secrets.NEW_RELIC_INFO="NEW_RELIC_INFO" `
              --set-string secrets.DISCORD_BOT_TOKEN="DISCORD_BOT_TOKEN" `
              --set-string secrets.DISCORD_GUILD_ID="DISCORD_GUILD_ID" `
              --set-string secrets.DISCORD_ROLE_ID="DISCORD_ROLE_ID" `
              --set-string secrets.DISCORD_ADMIN_IDS="DISCORD_ADMIN_IDS" `
              ./helm

      - name: üè∑Ô∏è New Relic Application Deployment Marker
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
          NEW_RELIC_REGION: EU
        run: |
          newrelic entity deployment create `
            --guid ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_SERVER }} `
            --version "${{ github.sha }}" `
            --commit "${{ github.sha }}" `
            --user "${{ github.actor }}"
