name: 🚀 Deploy

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  lint:
    name: ⬣ Lint
    runs-on: ubuntu-latest

    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable --immutable-cache

      - name: 🔬 Lint
        run: yarn lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest

    concurrency:
      group: typecheck-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable --immutable-cache

      - name: 🔎 Type check
        run: yarn typecheck

  test:
    name: 🧪 Unit tests
    runs-on: ubuntu-latest

    concurrency:
      group: test-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📥 Install deps
        run: yarn install --immutable --immutable-cache

      - name: 🧪 Run vitest
        run: yarn test -- --coverage

  integration:
    name: 🔗 Integration tests
    runs-on: ubuntu-latest

    concurrency:
      group: integration-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📥 Install deps
        run: |
          yarn install --immutable --immutable-cache
          yarn workspace @sommerlan-app/integration playwright install --with-deps

      - name: 🔨 Build
        run: yarn build

      - name: 🔗 Run tests
        run: yarn integrate
        env:
          SESSION_SECRET: kitty
          NEW_RELIC_ENABLED: "false"
          NEW_RELIC_LOGGING_ENABLED: "false"
          LOG_LEVEL: trace

      - name: 📦 Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/integration/playwright-report/
          retention-days: 30

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest

    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          outputs: type=docker,dest=/tmp/sommerlan-image.tar
          platforms: linux/amd64
          tags: sommerlan-app:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          name: sommerlan-image
          path: /tmp/sommerlan-image.tar

  deploy:
    name: 🚀 Deploy
    runs-on: self-hosted
    needs: [lint, typecheck, test, integration, build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        env_name: [staging, production]

    concurrency:
      group: deploy-${{ matrix.env_name }}
      # allow cancel if not reviewed
      cancel-in-progress: ${{ matrix.env_name == 'production' }}

    environment:
      name: ${{ matrix.env_name }}
      url: "https://${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks"

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 📦 Download artifact
        # assume prod already has the image
        if: ${{ matrix.env_name == 'staging' }}
        uses: actions/download-artifact@v4
        with:
          name: sommerlan-image
          path: ./image

      - name: 🐳 Load image
        # assume prod already has the image
        if: ${{ matrix.env_name == 'staging' }}
        run: |
          docker load --input ./image/sommerlan-image.tar

      - name: 📥 Setup kubeconfig
        run: |
          New-Item -ItemType Directory -Path "$HOME\.kube" -Force
          $env:KUBECONFIG_CONTENT = "${{ secrets.KUBECONFIG }}"
          $env:KUBECONFIG_CONTENT | Out-File -FilePath "$HOME\.kube\config" -Force -Encoding UTF8
      - name: 🚀 Deploy
        run: |
          helm upgrade sommerlan -n "sommerlan-${{ matrix.env_name }}" --install --create-namespace `
              --set image.tag="${{ github.ref_name }}-${{ github.sha }}" `
              --set deployment.environment.APP_ORIGIN="https://${{ matrix.env_name == 'staging' && 'staging.' || '' }}sommerlan.rocks" `
              --set deployment.environment.GOOGLE_SHEET_ID="${{ secrets.GOOGLE_SHEET_ID }}" `
              --set deployment.environment.GOOGLE_SERVICE_ACCOUNT_EMAIL="${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}" `
              --set deployment.environment.GOOGLE_PRIVATE_KEY="${{ secrets.GOOGLE_PRIVATE_KEY }}" `
              --set deployment.environment.NEW_RELIC_LICENSE_KEY="${{ secrets.NEW_RELIC_LICENSE_KEY }}" `
              --set deployment.environment.NEW_RELIC_APP_NAME="sommerlan-${{ matrix.env_name }}" `
              --set deployment.environment.NEW_RELIC_LOADER_CONFIG="${{ secrets.NEW_RELIC_LOADER_CONFIG }}" `
              --set deployment.environment.NEW_RELIC_INFO="${{ secrets.NEW_RELIC_INFO }}" `
              --set deployment.environment.DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }}" `
              --set deployment.environment.DISCORD_GUILD_ID="${{ secrets.DISCORD_GUILD_ID }}" `
              --set deployment.environment.DISCORD_ROLE_ID="${{ secrets.DISCORD_ROLE_ID }}" `
              ./helm

      - name: 🏷️ New Relic Application Deployment Marker
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
          NEW_RELIC_REGION: EU
        run: |
          newrelic entity deployment create \
            --guid ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID_SERVER }} \
            --version "${{ github.sha }}" \
            --commit "${{ github.sha }}" \
            --user "${{ github.actor }}"
