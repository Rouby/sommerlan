/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PartyCheckInImport } from './routes/party/check-in'

// Create Virtual Routes

const ImprintLazyImport = createFileRoute('/imprint')()
const AdminLazyImport = createFileRoute('/admin')()
const IndexLazyImport = createFileRoute('/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const PartyIndexLazyImport = createFileRoute('/party/')()
const GamesIndexLazyImport = createFileRoute('/games/')()
const EventsIndexLazyImport = createFileRoute('/events/')()
const AdminUsersLazyImport = createFileRoute('/admin/users')()
const AdminGamesLazyImport = createFileRoute('/admin/games')()
const AdminCacheLazyImport = createFileRoute('/admin/cache')()
const AdminBudgetLazyImport = createFileRoute('/admin/budget')()
const PartyArchiveIndexLazyImport = createFileRoute('/party/archive/')()
const PartyArchiveIdLazyImport = createFileRoute('/party/archive/$id')()
const AdminUsersCheckInLazyImport = createFileRoute('/admin/users/check-in')()

// Create/Update Routes

const ImprintLazyRoute = ImprintLazyImport.update({
  path: '/imprint',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/imprint.lazy').then((d) => d.Route))

const AdminLazyRoute = AdminLazyImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const PartyIndexLazyRoute = PartyIndexLazyImport.update({
  path: '/party/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/party/index.lazy').then((d) => d.Route))

const GamesIndexLazyRoute = GamesIndexLazyImport.update({
  path: '/games/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/games/index.lazy').then((d) => d.Route))

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/index.lazy').then((d) => d.Route))

const AdminUsersLazyRoute = AdminUsersLazyImport.update({
  path: '/users',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/users.lazy').then((d) => d.Route))

const AdminGamesLazyRoute = AdminGamesLazyImport.update({
  path: '/games',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/games.lazy').then((d) => d.Route))

const AdminCacheLazyRoute = AdminCacheLazyImport.update({
  path: '/cache',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/cache.lazy').then((d) => d.Route))

const AdminBudgetLazyRoute = AdminBudgetLazyImport.update({
  path: '/budget',
  getParentRoute: () => AdminLazyRoute,
} as any).lazy(() => import('./routes/admin/budget.lazy').then((d) => d.Route))

const PartyCheckInRoute = PartyCheckInImport.update({
  path: '/party/check-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/party/check-in.lazy').then((d) => d.Route),
)

const PartyArchiveIndexLazyRoute = PartyArchiveIndexLazyImport.update({
  path: '/party/archive/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/party/archive/index.lazy').then((d) => d.Route),
)

const PartyArchiveIdLazyRoute = PartyArchiveIdLazyImport.update({
  path: '/party/archive/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/party/archive/$id.lazy').then((d) => d.Route),
)

const AdminUsersCheckInLazyRoute = AdminUsersCheckInLazyImport.update({
  path: '/admin/users/check-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin_/users/check-in.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintLazyImport
      parentRoute: typeof rootRoute
    }
    '/party/check-in': {
      id: '/party/check-in'
      path: '/party/check-in'
      fullPath: '/party/check-in'
      preLoaderRoute: typeof PartyCheckInImport
      parentRoute: typeof rootRoute
    }
    '/admin/budget': {
      id: '/admin/budget'
      path: '/budget'
      fullPath: '/admin/budget'
      preLoaderRoute: typeof AdminBudgetLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/cache': {
      id: '/admin/cache'
      path: '/cache'
      fullPath: '/admin/cache'
      preLoaderRoute: typeof AdminCacheLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/games': {
      id: '/admin/games'
      path: '/games'
      fullPath: '/admin/games'
      preLoaderRoute: typeof AdminGamesLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersLazyImport
      parentRoute: typeof AdminLazyImport
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/games/': {
      id: '/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/party/': {
      id: '/party/'
      path: '/party'
      fullPath: '/party'
      preLoaderRoute: typeof PartyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/check-in': {
      id: '/admin/users/check-in'
      path: '/admin/users/check-in'
      fullPath: '/admin/users/check-in'
      preLoaderRoute: typeof AdminUsersCheckInLazyImport
      parentRoute: typeof rootRoute
    }
    '/party/archive/$id': {
      id: '/party/archive/$id'
      path: '/party/archive/$id'
      fullPath: '/party/archive/$id'
      preLoaderRoute: typeof PartyArchiveIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/party/archive/': {
      id: '/party/archive/'
      path: '/party/archive'
      fullPath: '/party/archive'
      preLoaderRoute: typeof PartyArchiveIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AdminLazyRoute: AdminLazyRoute.addChildren({
    AdminBudgetLazyRoute,
    AdminCacheLazyRoute,
    AdminGamesLazyRoute,
    AdminUsersLazyRoute,
  }),
  ImprintLazyRoute,
  PartyCheckInRoute,
  EventsIndexLazyRoute,
  GamesIndexLazyRoute,
  PartyIndexLazyRoute,
  ProfileIndexLazyRoute,
  AdminUsersCheckInLazyRoute,
  PartyArchiveIdLazyRoute,
  PartyArchiveIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/imprint",
        "/party/check-in",
        "/events/",
        "/games/",
        "/party/",
        "/profile/",
        "/admin/users/check-in",
        "/party/archive/$id",
        "/party/archive/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/admin": {
      "filePath": "admin.lazy.tsx",
      "children": [
        "/admin/budget",
        "/admin/cache",
        "/admin/games",
        "/admin/users"
      ]
    },
    "/imprint": {
      "filePath": "imprint.lazy.tsx"
    },
    "/party/check-in": {
      "filePath": "party/check-in.tsx"
    },
    "/admin/budget": {
      "filePath": "admin/budget.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/cache": {
      "filePath": "admin/cache.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/games": {
      "filePath": "admin/games.lazy.tsx",
      "parent": "/admin"
    },
    "/admin/users": {
      "filePath": "admin/users.lazy.tsx",
      "parent": "/admin"
    },
    "/events/": {
      "filePath": "events/index.lazy.tsx"
    },
    "/games/": {
      "filePath": "games/index.lazy.tsx"
    },
    "/party/": {
      "filePath": "party/index.lazy.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.lazy.tsx"
    },
    "/admin/users/check-in": {
      "filePath": "admin_/users/check-in.lazy.tsx"
    },
    "/party/archive/$id": {
      "filePath": "party/archive/$id.lazy.tsx"
    },
    "/party/archive/": {
      "filePath": "party/archive/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
