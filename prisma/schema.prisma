datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name           String
  password       Password?
  role           Role                 @default(USER)
  participations ParticipantOfParty[]
  workloads      Workload[]
  news           News[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

enum Role {
  ADMIN
  ORGANIZER
  TRUSTED_USER
  USER
}

model Party {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  startDate    DateTime             @unique
  endDate      DateTime             @unique
  name         String?
  participants ParticipantOfParty[]
  workloads    Workload[]
}

model Workload {
  id String @id @default(cuid())

  title      String
  assignee   User?   @relation(fields: [assigneeId], references: [id])
  assigneeId String?
  party      Party   @relation(fields: [partyId], references: [id])
  partyId    String
}

model ParticipantOfParty {
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  party   Party  @relation(fields: [partyId], references: [id], onDelete: Cascade)
  partyId String

  arrivingAt  DateTime
  departingAt DateTime
  paidMoney   Int?

  @@id([userId, partyId])
}

model News {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title    String
  text     String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}
